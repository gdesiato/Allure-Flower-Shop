# MYSQL Database connection configuration
# spring.datasource.url=jdbc:mysql://localhost:3306/allure-shop?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
# spring.datasource.username=root
# spring.datasource.password=${PASSWORD}


# POSTGRES Database configuration
spring.datasource.url=jdbc:postgresql://ec2-35-172-26-41.compute-1.amazonaws.com:5432/df05vpbla3i45e
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.username=nkkjuquaillxqc
spring.datasource.password=b72f92bd41a37235b7f5189416c8c27aa3e9e181c34e7d8bf23cd962fcb63d2
spring.datasource.maxActive=10
spring.datasource.maxIdle=5
spring.datasource.minIdle=2
spring.datasource.initialSize=5
spring.datasource.removeAbandoned=true
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# JPA/Hibernate configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# Remove if using POSTGRES
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect

# Redis Configuration
spring.cache.type=redis
spring.cache.redis.cache-null-values=true
spring.redis.port=6379
spring.redis.host=127.0.0.1

logging.level.org.springframework.security=INFO
logging.level.org.thymeleaf=INFO
logging.level.com.giuseppe=DEBUG

# avoid conflicts with the implemented error endpoint
server.error.whitelabel.enabled=false

# third-party weather api

api.key=${APIKEY}
api.url=http://api.openweathermap.org/data/2.5/weather?q=